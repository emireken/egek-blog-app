{"ast":null,"code":"import _slicedToArray from\"C:\\\\Coding\\\\react-blog-github\\\\react-blog-github\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import readingTime from\"reading-time\";import{useHistory}from\"react-router-dom\";import{CardContainer,CardHeader,CardCategory,CardReadingTime,CardTitle,CardDescription}from'./';export var Card=function Card(_ref){var blog=_ref.blog;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),labels=_useState2[0],setLabels=_useState2[1];var history=useHistory();var openBlog=function openBlog(title,number){history.push(\"/blog/\".concat(title,\"/\").concat(number));};useEffect(function(){var labels=blog.labels.nodes.filter(function(value){return value.name!==\"blog\";});setLabels(labels);},[blog.labels.nodes]);return/*#__PURE__*/React.createElement(CardContainer,null,/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(React.Fragment,null,labels.map(function(value,i){return/*#__PURE__*/React.createElement(CardCategory,{value:value,key:i});})),/*#__PURE__*/React.createElement(CardReadingTime,{time:readingTime(blog.body).minutes})),/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return openBlog(blog.title,blog.number);}},/*#__PURE__*/React.createElement(CardTitle,null,blog.title),/*#__PURE__*/React.createElement(CardDescription,null,blog.bodyText)));};","map":{"version":3,"sources":["C:/Coding/react-blog-github/react-blog-github/src/Components/Blog/Card/Card.js"],"names":["React","useState","useEffect","readingTime","useHistory","CardContainer","CardHeader","CardCategory","CardReadingTime","CardTitle","CardDescription","Card","blog","labels","setLabels","history","openBlog","title","number","push","nodes","filter","value","name","map","i","body","minutes","bodyText"],"mappings":"4KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,OACEC,aADF,CAEEC,UAFF,CAGEC,YAHF,CAIEC,eAJF,CAKEC,SALF,CAMEC,eANF,KAOO,IAPP,CASA,MAAO,IAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAChC,cAA4BX,QAAQ,CAAC,EAAD,CAApC,wCAAOY,MAAP,eAAeC,SAAf,eACA,GAAMC,CAAAA,OAAO,CAAGX,UAAU,EAA1B,CAEA,GAAMY,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAClCH,OAAO,CAACI,IAAR,iBAAsBF,KAAtB,aAA+BC,MAA/B,GACD,CAFD,CAIAhB,SAAS,CAAC,UAAM,CACd,GAAMW,CAAAA,MAAM,CAAGD,IAAI,CAACC,MAAL,CAAYO,KAAZ,CAAkBC,MAAlB,CAAyB,SAACC,KAAD,CAAW,CACjD,MAAOA,CAAAA,KAAK,CAACC,IAAN,GAAe,MAAtB,CACD,CAFc,CAAf,CAIAT,SAAS,CAACD,MAAD,CAAT,CACD,CANQ,CAMN,CAACD,IAAI,CAACC,MAAL,CAAYO,KAAb,CANM,CAAT,CAQA,mBACE,oBAAC,aAAD,mBACE,oBAAC,UAAD,mBACE,wCACCP,MAAM,CAACW,GAAP,CAAW,SAACF,KAAD,CAAQG,CAAR,CAAc,CACxB,mBACE,oBAAC,YAAD,EAAc,KAAK,CAAEH,KAArB,CAA4B,GAAG,CAAEG,CAAjC,EADF,CAGD,CAJA,CADD,CADF,cAQE,oBAAC,eAAD,EAAiB,IAAI,CAAEtB,WAAW,CAACS,IAAI,CAACc,IAAN,CAAX,CAAuBC,OAA9C,EARF,CADF,cAWE,2BAAK,OAAO,CAAE,yBAAMX,CAAAA,QAAQ,CAACJ,IAAI,CAACK,KAAN,CAAaL,IAAI,CAACM,MAAlB,CAAd,EAAd,eACE,oBAAC,SAAD,MAAYN,IAAI,CAACK,KAAjB,CADF,cAEE,oBAAC,eAAD,MACGL,IAAI,CAACgB,QADR,CAFF,CAXF,CADF,CAoBD,CApCM","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport readingTime from \"reading-time\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  CardContainer,\n  CardHeader,\n  CardCategory,\n  CardReadingTime,\n  CardTitle,\n  CardDescription,\n} from './'\n\nexport const Card = ({ blog }) => {\n  const [labels, setLabels] = useState([]);\n  const history = useHistory();\n\n  const openBlog = (title, number) => {\n    history.push(`/blog/${title}/${number}`);\n  }\n\n  useEffect(() => {\n    const labels = blog.labels.nodes.filter((value) => {\n      return value.name !== \"blog\";\n    });\n\n    setLabels(labels);\n  }, [blog.labels.nodes]);\n\n  return (\n    <CardContainer>\n      <CardHeader>\n        <>\n        {labels.map((value, i) => {\n          return (\n            <CardCategory value={value} key={i} />\n          );\n        })}\n        </>\n        <CardReadingTime time={readingTime(blog.body).minutes} />\n      </CardHeader>\n      <div onClick={() => openBlog(blog.title, blog.number)}>\n        <CardTitle>{blog.title}</CardTitle>\n        <CardDescription>\n          {blog.bodyText}\n        </CardDescription>\n      </div>\n    </CardContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}