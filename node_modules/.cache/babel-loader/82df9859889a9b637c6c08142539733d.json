{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Coding\\\\react-blog-github\\\\react-blog-github\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Coding\\\\react-blog-github\\\\react-blog-github\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Coding\\\\react-blog-github\\\\react-blog-github\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{config}from'../config';import{getAuthenticatedUser}from'../Utils/auth';import{Loader}from'../Components/Common/Loader';var enableOAuth=config.enableOAuth,OAuthClientID=config.OAuthClientID,OAuthSecret=config.OAuthSecret;var GithubCallback=function GithubCallback(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var authenticate=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(code){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token',{method:'POST',body:new URLSearchParams({client_id:OAuthClientID,client_secret:OAuthSecret,code:code}),headers:new Headers({'Accept':'application/json','Content-Type':'application/x-www-form-urlencoded'})});case 2:response=_context.sent;return _context.abrupt(\"return\",response.json());case 4:case\"end\":return _context.stop();}}},_callee);}));return function authenticate(_x){return _ref.apply(this,arguments);};}();var setUsername=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$getAuthenticat,login;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getAuthenticatedUser();case 2:_yield$getAuthenticat=_context2.sent;login=_yield$getAuthenticat.login;localStorage.setItem('githubUsername',login);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function setUsername(){return _ref2.apply(this,arguments);};}();useEffect(function(){var urlParams=new URLSearchParams(window.location.search);authenticate(urlParams.get('code')).then(function(response){if(response){localStorage.setItem('githubToken',response.access_token);setUsername().then(function(){return setLoading(false);});}});},[]);if(!enableOAuth||!loading){return window.location.replace(window.location.origin+window.location.pathname);}return/*#__PURE__*/React.createElement(Loader,null);};export default GithubCallback;","map":{"version":3,"sources":["C:/Coding/react-blog-github/react-blog-github/src/Containers/GithubCallback.js"],"names":["React","useEffect","useState","config","getAuthenticatedUser","Loader","enableOAuth","OAuthClientID","OAuthSecret","GithubCallback","loading","setLoading","authenticate","code","fetch","method","body","URLSearchParams","client_id","client_secret","headers","Headers","response","json","setUsername","login","localStorage","setItem","urlParams","window","location","search","get","then","access_token","replace","origin","pathname"],"mappings":"igBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,OAASC,MAAT,KAAuB,WAAvB,CACA,OAASC,oBAAT,KAAqC,eAArC,CACA,OAASC,MAAT,KAAuB,6BAAvB,CAEA,GAAQC,CAAAA,WAAR,CAAoDH,MAApD,CAAQG,WAAR,CAAqBC,aAArB,CAAoDJ,MAApD,CAAqBI,aAArB,CAAoCC,WAApC,CAAoDL,MAApD,CAAoCK,WAApC,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B,cAA8BP,QAAQ,CAAC,IAAD,CAAtC,wCAAOQ,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,YAAY,0FAAG,iBAAOC,IAAP,qJAEIC,CAAAA,KAAK,CAAC,iFAAD,CAAoF,CAC9GC,MAAM,CAAE,MADsG,CAE9GC,IAAI,CAAE,GAAIC,CAAAA,eAAJ,CAAoB,CACxBC,SAAS,CAAEX,aADa,CAExBY,aAAa,CAAEX,WAFS,CAGxBK,IAAI,CAAEA,IAHkB,CAApB,CAFwG,CAO9GO,OAAO,CAAE,GAAIC,CAAAA,OAAJ,CAAY,CACnB,SAAU,kBADS,CAEnB,eAAgB,mCAFG,CAAZ,CAPqG,CAApF,CAFT,QAEbC,QAFa,+CAeZA,QAAQ,CAACC,IAAT,EAfY,wDAAH,kBAAZX,CAAAA,YAAY,4CAAlB,CAkBA,GAAMY,CAAAA,WAAW,2FAAG,+LACMpB,CAAAA,oBAAoB,EAD1B,6CACVqB,KADU,uBACVA,KADU,CAElBC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAuCF,KAAvC,EAFkB,wDAAH,kBAAXD,CAAAA,WAAW,2CAAjB,CAKAvB,SAAS,CAAC,UAAM,CACd,GAAM2B,CAAAA,SAAS,CAAG,GAAIX,CAAAA,eAAJ,CAAoBY,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB,CACAnB,YAAY,CAACgB,SAAS,CAACI,GAAV,CAAc,MAAd,CAAD,CAAZ,CACCC,IADD,CACM,SAACX,QAAD,CAAc,CAClB,GAAIA,QAAJ,CAAc,CACZI,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoCL,QAAQ,CAACY,YAA7C,EACAV,WAAW,GAAGS,IAAd,CAAmB,iBAAMtB,CAAAA,UAAU,CAAC,KAAD,CAAhB,EAAnB,EACD,CACF,CAND,EAOD,CATQ,CASN,EATM,CAAT,CAWA,GAAI,CAACL,WAAD,EAAgB,CAACI,OAArB,CAA8B,CAC5B,MAAOmB,CAAAA,MAAM,CAACC,QAAP,CAAgBK,OAAhB,CAAwBN,MAAM,CAACC,QAAP,CAAgBM,MAAhB,CAAyBP,MAAM,CAACC,QAAP,CAAgBO,QAAjE,CAAP,CACD,CAED,mBAAO,oBAAC,MAAD,MAAP,CACD,CA1CD,CA4CA,cAAe5B,CAAAA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { config } from '../config'\nimport { getAuthenticatedUser } from '../Utils/auth'\nimport { Loader } from '../Components/Common/Loader'\n\nconst { enableOAuth, OAuthClientID, OAuthSecret } = config\n\nconst GithubCallback = () => {\n  const [loading, setLoading] = useState(true)\n\n  const authenticate = async (code) => {\n    // Apparently we need to use a proxy to make this request (CORS blocked for client-side only applications)\n    const response = await fetch('https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token', {\n      method: 'POST',\n      body: new URLSearchParams({\n        client_id: OAuthClientID,\n        client_secret: OAuthSecret,\n        code: code,\n      }),\n      headers: new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }),\n    })\n\n    return response.json()\n  }\n\n  const setUsername = async () => {\n    const { login } = await getAuthenticatedUser()\n    localStorage.setItem('githubUsername', login)\n  }\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    authenticate(urlParams.get('code'))\n    .then((response) => {\n      if (response) {\n        localStorage.setItem('githubToken', response.access_token)\n        setUsername().then(() => setLoading(false))\n      }\n    })\n  }, [])\n\n  if (!enableOAuth || !loading) {\n    return window.location.replace(window.location.origin + window.location.pathname);\n  }\n\n  return <Loader />\n}\n\nexport default GithubCallback\n"]},"metadata":{},"sourceType":"module"}