{"ast":null,"code":"import _slicedToArray from\"C:\\\\Coding\\\\react-blog-github\\\\react-blog-github\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from\"react\";import{ApolloProvider}from\"@apollo/react-hooks\";import{Helmet}from\"react-helmet\";import{ThemeProvider}from\"styled-components\";import{config}from\"./config\";import{client}from\"./Utils/apollo\";import Router from\"./Router\";import GithubCallback from\"./Containers/GithubCallback\";import Toggle from\"./Components/Theme/Toggler\";import{GlobalStyles}from\"./Components/Theme/GlobalStyles\";import{lightTheme,darkTheme}from\"./Components/Theme/Theme\";import{useDarkMode}from\"./Components/Theme/useDarkMode\";var Application=function Application(){var urlParams=new URLSearchParams(window.location.search);var _useDarkMode=useDarkMode(),_useDarkMode2=_slicedToArray(_useDarkMode,2),theme=_useDarkMode2[0],themeToggler=_useDarkMode2[1];var themeMode=theme===\"light\"?lightTheme:darkTheme;if(urlParams.get(\"code\")){return/*#__PURE__*/React.createElement(GithubCallback,null);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Helmet,null,/*#__PURE__*/React.createElement(\"title\",null,config.title),/*#__PURE__*/React.createElement(\"meta\",{charSet:\"utf-8\"}),/*#__PURE__*/React.createElement(\"meta\",{name:\"description\",content:config.subtitle}),/*#__PURE__*/React.createElement(\"meta\",{name:\"contact\",content:config.contact}),/*#__PURE__*/React.createElement(\"meta\",{name:\"theme-color\",content:config.header.backgroundColor})),/*#__PURE__*/React.createElement(ApolloProvider,{client:client},/*#__PURE__*/React.createElement(ThemeProvider,{theme:themeMode,toggleTheme:themeToggler},/*#__PURE__*/React.createElement(GlobalStyles,null),/*#__PURE__*/React.createElement(Router,null),/*#__PURE__*/React.createElement(Toggle,{theme:theme,toggleTheme:themeToggler}))));};export default Application;","map":{"version":3,"sources":["C:/Coding/react-blog-github/react-blog-github/src/Application.js"],"names":["React","ApolloProvider","Helmet","ThemeProvider","config","client","Router","GithubCallback","Toggle","GlobalStyles","lightTheme","darkTheme","useDarkMode","Application","urlParams","URLSearchParams","window","location","search","theme","themeToggler","themeMode","get","title","subtitle","contact","header","backgroundColor"],"mappings":"4KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,qBAA/B,CACA,OAASC,MAAT,KAAuB,cAAvB,CACA,OAASC,aAAT,KAA8B,mBAA9B,CAEA,OAASC,MAAT,KAAuB,UAAvB,CACA,OAASC,MAAT,KAAuB,gBAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,6BAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,OAASC,YAAT,KAA6B,iCAA7B,CACA,OAASC,UAAT,CAAqBC,SAArB,KAAsC,0BAAtC,CACA,OAASC,WAAT,KAA4B,gCAA5B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB,CACA,iBAA8BN,WAAW,EAAzC,8CAAOO,KAAP,kBAAcC,YAAd,kBACA,GAAMC,CAAAA,SAAS,CAAGF,KAAK,GAAK,OAAV,CAAoBT,UAApB,CAAiCC,SAAnD,CAEA,GAAIG,SAAS,CAACQ,GAAV,CAAc,MAAd,CAAJ,CAA2B,CACzB,mBAAO,oBAAC,cAAD,MAAP,CACD,CAED,mBACE,qDACE,oBAAC,MAAD,mBACE,iCAAQlB,MAAM,CAACmB,KAAf,CADF,cAEE,4BAAM,OAAO,CAAC,OAAd,EAFF,cAGE,4BAAM,IAAI,CAAC,aAAX,CAAyB,OAAO,CAAEnB,MAAM,CAACoB,QAAzC,EAHF,cAIE,4BAAM,IAAI,CAAC,SAAX,CAAqB,OAAO,CAAEpB,MAAM,CAACqB,OAArC,EAJF,cAKE,4BAAM,IAAI,CAAC,aAAX,CAAyB,OAAO,CAAErB,MAAM,CAACsB,MAAP,CAAcC,eAAhD,EALF,CADF,cAQE,oBAAC,cAAD,EAAgB,MAAM,CAAEtB,MAAxB,eACE,oBAAC,aAAD,EAAe,KAAK,CAAEgB,SAAtB,CAAiC,WAAW,CAAED,YAA9C,eACE,oBAAC,YAAD,MADF,cAEE,oBAAC,MAAD,MAFF,cAGE,oBAAC,MAAD,EAAQ,KAAK,CAAED,KAAf,CAAsB,WAAW,CAAEC,YAAnC,EAHF,CADF,CARF,CADF,CAkBD,CA3BD,CA6BA,cAAeP,CAAAA,WAAf","sourcesContent":["import React from \"react\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { Helmet } from \"react-helmet\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport { config } from \"./config\";\nimport { client } from \"./Utils/apollo\";\nimport Router from \"./Router\";\nimport GithubCallback from \"./Containers/GithubCallback\";\nimport Toggle from \"./Components/Theme/Toggler\";\nimport { GlobalStyles } from \"./Components/Theme/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"./Components/Theme/Theme\";\nimport { useDarkMode } from \"./Components/Theme/useDarkMode\";\n\nconst Application = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const [theme, themeToggler] = useDarkMode();\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n  if (urlParams.get(\"code\")) {\n    return <GithubCallback />;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{config.title}</title>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"description\" content={config.subtitle} />\n        <meta name=\"contact\" content={config.contact} />\n        <meta name=\"theme-color\" content={config.header.backgroundColor} />\n      </Helmet>\n      <ApolloProvider client={client}>\n        <ThemeProvider theme={themeMode} toggleTheme={themeToggler}>\n          <GlobalStyles />\n          <Router />\n          <Toggle theme={theme} toggleTheme={themeToggler} />\n        </ThemeProvider>\n      </ApolloProvider>\n    </>\n  );\n};\n\nexport default Application;\n"]},"metadata":{},"sourceType":"module"}