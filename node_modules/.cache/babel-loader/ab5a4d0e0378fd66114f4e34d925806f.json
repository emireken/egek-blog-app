{"ast":null,"code":"import _slicedToArray from\"C:\\\\Coding\\\\react-blog-github\\\\react-blog-github\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"C:\\\\Coding\\\\react-blog-github\\\\react-blog-github\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n{\\n  repository(owner: \\\"\",\"\\\", name: \\\"\",\"\\\") {\\n    issues(first: 100, states: OPEN, filterBy: { labels: \\\"blog\\\" }, orderBy: { direction: DESC, field: CREATED_AT }) {\\n      nodes {\\n        title\\n        body\\n        bodyHTML\\n        bodyText\\n        number\\n        labels(first: 100) {\\n          nodes {\\n            color\\n            name\\n            id\\n          }\\n        }\\n        author {\\n          url\\n          avatarUrl\\n          login\\n        }\\n        updatedAt\\n        id\\n      }\\n    }\\n  }\\n}\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect}from\"react\";import{gql}from\"apollo-boost\";import{useQuery}from'@apollo/react-hooks';import{config}from\"../config\";import{Header}from\"../Components/Header\";import{Loader}from'../Components/Common';import{BlogContainer}from'../Components/Blog';import{Card}from'../Components/Blog/Card';var GET_POSTS=gql(_templateObject(),config.githubUserName,config.githubRepo);var Blog=function Blog(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];var _useQuery=useQuery(GET_POSTS),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data;useEffect(function(){if(!loading){if(error){console.error(error);}if(data){var _data$repository,_data$repository$issu;setPosts(data===null||data===void 0?void 0:(_data$repository=data.repository)===null||_data$repository===void 0?void 0:(_data$repository$issu=_data$repository.issues)===null||_data$repository$issu===void 0?void 0:_data$repository$issu.nodes);}}},[loading,error,data]);return React.createElement(React.Fragment,null,React.createElement(Header,null),React.createElement(BlogContainer,null,loading?React.createElement(Loader,null):posts.map(function(v,i){return React.createElement(Card,{blog:v,key:i});})));};export default Blog;","map":{"version":3,"sources":["C:/Coding/react-blog-github/react-blog-github/src/Containers/Blog.js"],"names":["React","useState","useEffect","gql","useQuery","config","Header","Loader","BlogContainer","Card","GET_POSTS","githubUserName","githubRepo","Blog","posts","setPosts","loading","error","data","console","repository","issues","nodes","map","v","i"],"mappings":"u7BAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,GAAT,KAAoB,cAApB,CACA,OAASC,QAAT,KAAyB,qBAAzB,CAEA,OAASC,MAAT,KAAuB,WAAvB,CACA,OAASC,MAAT,KAAuB,sBAAvB,CACA,OAASC,MAAT,KAAuB,sBAAvB,CACA,OAASC,aAAT,KAA8B,oBAA9B,CACA,OAASC,IAAT,KAAqB,yBAArB,CAEA,GAAMC,CAAAA,SAAS,CAAGP,GAAH,mBAEQE,MAAM,CAACM,cAFf,CAE0CN,MAAM,CAACO,UAFjD,CAAf,CA8BA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,eACSZ,QAAQ,CAAC,EAAD,CADjB,wCACVa,KADU,eACHC,QADG,6BAEgBX,QAAQ,CAACM,SAAD,CAFxB,CAETM,OAFS,WAETA,OAFS,CAEAC,KAFA,WAEAA,KAFA,CAEOC,IAFP,WAEOA,IAFP,CAIjBhB,SAAS,CAAC,UAAM,CACd,GAAI,CAACc,OAAL,CAAc,CACZ,GAAIC,KAAJ,CAAW,CACTE,OAAO,CAACF,KAAR,CAAcA,KAAd,EACD,CAED,GAAIC,IAAJ,CAAU,4CACRH,QAAQ,CAACG,IAAD,SAACA,IAAD,mCAACA,IAAI,CAAEE,UAAP,kEAAC,iBAAkBC,MAAnB,gDAAC,sBAA0BC,KAA3B,CAAR,CACD,CACF,CACF,CAVQ,CAUN,CAACN,OAAD,CAAUC,KAAV,CAAiBC,IAAjB,CAVM,CAAT,CAYA,MACE,yCACE,oBAAC,MAAD,MADF,CAEE,oBAAC,aAAD,MAEIF,OAAO,CACL,oBAAC,MAAD,MADK,CAELF,KAAK,CAACS,GAAN,CAAU,SAACC,CAAD,CAAIC,CAAJ,CAAU,CAClB,MAAO,qBAAC,IAAD,EAAM,IAAI,CAAED,CAAZ,CAAe,GAAG,CAAEC,CAApB,EAAP,CACD,CAFD,CAJN,CAFF,CADF,CAcD,CA9BD,CAgCA,cAAeZ,CAAAA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { config } from \"../config\";\nimport { Header } from \"../Components/Header\";\nimport { Loader } from '../Components/Common'\nimport { BlogContainer } from '../Components/Blog'\nimport { Card } from '../Components/Blog/Card'\n\nconst GET_POSTS = gql`\n{\n  repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n    issues(first: 100, states: OPEN, filterBy: { labels: \"blog\" }, orderBy: { direction: DESC, field: CREATED_AT }) {\n      nodes {\n        title\n        body\n        bodyHTML\n        bodyText\n        number\n        labels(first: 100) {\n          nodes {\n            color\n            name\n            id\n          }\n        }\n        author {\n          url\n          avatarUrl\n          login\n        }\n        updatedAt\n        id\n      }\n    }\n  }\n}\n`\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        console.error(error)\n      }\n\n      if (data) {\n        setPosts(data?.repository?.issues?.nodes)\n      }\n    }\n  }, [loading, error, data]);\n\n  return (\n    <>\n      <Header />\n      <BlogContainer>\n        {\n          loading\n          ? <Loader />\n          : posts.map((v, i) => {\n              return <Card blog={v} key={i} />;\n            })\n        }\n      </BlogContainer>\n    </>\n  );\n}\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}