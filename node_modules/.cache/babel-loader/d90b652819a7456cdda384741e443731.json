{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Coding\\\\react-blog-github\\\\react-blog-github\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Coding\\\\react-blog-github\\\\react-blog-github\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _taggedTemplateLiteral from\"C:\\\\Coding\\\\react-blog-github\\\\react-blog-github\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React from'react';import styled from'styled-components';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faGithub}from'@fortawesome/free-brands-svg-icons';import{config}from'../../config';var enableOAuth=config.enableOAuth,OAuthClientID=config.OAuthClientID;var ButtonContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: \",\";\\n  position: \",\";\\n  top: 10px;\\n  right: 10px;\\n\"])),enableOAuth?'block':'none',function(_ref){var absolute=_ref.absolute;return absolute?'absolute':'initial';});var Button=styled.button(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  -webkit-appearance: none;\\n  background: linear-gradient(180deg, rgb(136, 220, 109) 0%, rgb(92, 168, 65) 100%);\\n  color: #FFF;\\n  border: none;\\n  padding: 8px 16px;\\n  font-size: 16px;\\n  border-radius: 5px;\\n  cursor: pointer;\\n  transition: 0.2s;\\n  outline: 0;\\n\\n  :hover {\\n    box-shadow: 0px 0px 10px 1px rgba(0,0,0,0.10);\\n  }\\n\"])));var Text=styled.span(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  color: #FFF;\\n  font-size: 18px;\\n\"])));export var GithubLogin=function GithubLogin(_ref2){var isAbsolute=_ref2.isAbsolute;var isLoggedIn=localStorage.getItem('githubToken')||false;var callOAuth=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:window.location.href='https://github.com/login/oauth/authorize?client_id='+OAuthClientID;case 1:case\"end\":return _context.stop();}}},_callee);}));return function callOAuth(){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(ButtonContainer,{absolute:isAbsolute},!isLoggedIn?/*#__PURE__*/React.createElement(Button,{onClick:callOAuth},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faGithub}),\" Log in\"):/*#__PURE__*/React.createElement(Text,null,\"Logged in as \",localStorage.getItem('githubUsername')));};","map":{"version":3,"sources":["C:/Coding/react-blog-github/react-blog-github/src/Components/Header/GithubLogin.js"],"names":["React","styled","FontAwesomeIcon","faGithub","config","enableOAuth","OAuthClientID","ButtonContainer","div","absolute","Button","button","Text","span","GithubLogin","isAbsolute","isLoggedIn","localStorage","getItem","callOAuth","window","location","href"],"mappings":"ukBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,QAAT,KAAyB,oCAAzB,CACA,OAASC,MAAT,KAAuB,cAAvB,CAEA,GAAQC,CAAAA,WAAR,CAAuCD,MAAvC,CAAQC,WAAR,CAAqBC,aAArB,CAAuCF,MAAvC,CAAqBE,aAArB,CAEA,GAAMC,CAAAA,eAAe,CAAGN,MAAM,CAACO,GAAV,oIACRH,WAAW,CAAG,OAAH,CAAa,MADhB,CAEP,kBAAGI,CAAAA,QAAH,MAAGA,QAAH,OAAkBA,CAAAA,QAAQ,CAAG,UAAH,CAAgB,SAA1C,EAFO,CAArB,CAMA,GAAMC,CAAAA,MAAM,CAAGT,MAAM,CAACU,MAAV,yZAAZ,CAiBA,GAAMC,CAAAA,IAAI,CAAGX,MAAM,CAACY,IAAV,yGAAV,CAKA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,OAAoB,IAAjBC,CAAAA,UAAiB,OAAjBA,UAAiB,CAC7C,GAAMC,CAAAA,UAAU,CAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,GAAuC,KAA1D,CAEA,GAAMC,CAAAA,SAAS,2FAAG,mIAChBC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,sDAAwDhB,aAA/E,CADgB,sDAAH,kBAATa,CAAAA,SAAS,2CAAf,CAIA,mBACE,oBAAC,eAAD,EAAiB,QAAQ,CAAEJ,UAA3B,EACG,CAACC,UAAD,cAEG,oBAAC,MAAD,EAAQ,OAAO,CAAEG,SAAjB,eACE,oBAAC,eAAD,EAAiB,IAAI,CAAEhB,QAAvB,EADF,WAFH,cAME,oBAAC,IAAD,sBAAoBc,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAApB,CAPL,CADF,CAYD,CAnBM","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { config } from '../../config'\n\nconst { enableOAuth, OAuthClientID } = config\n\nconst ButtonContainer = styled.div`\n  display: ${enableOAuth ? 'block' : 'none'};\n  position: ${({ absolute }) => absolute ? 'absolute' : 'initial'};\n  top: 10px;\n  right: 10px;\n`\nconst Button = styled.button`\n  -webkit-appearance: none;\n  background: linear-gradient(180deg, rgb(136, 220, 109) 0%, rgb(92, 168, 65) 100%);\n  color: #FFF;\n  border: none;\n  padding: 8px 16px;\n  font-size: 16px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: 0.2s;\n  outline: 0;\n\n  :hover {\n    box-shadow: 0px 0px 10px 1px rgba(0,0,0,0.10);\n  }\n`\n\nconst Text = styled.span`\n  color: #FFF;\n  font-size: 18px;\n`\n\nexport const GithubLogin = ({ isAbsolute }) => {\n  const isLoggedIn = localStorage.getItem('githubToken') || false\n\n  const callOAuth = async () => {\n    window.location.href = 'https://github.com/login/oauth/authorize?client_id=' + OAuthClientID;\n  }\n\n  return (\n    <ButtonContainer absolute={isAbsolute}>\n      {!isLoggedIn\n       ? (\n          <Button onClick={callOAuth}>\n            <FontAwesomeIcon icon={faGithub} /> Log in\n          </Button>\n         )\n       : <Text>Logged in as {localStorage.getItem('githubUsername')}</Text>\n      }\n    </ButtonContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}