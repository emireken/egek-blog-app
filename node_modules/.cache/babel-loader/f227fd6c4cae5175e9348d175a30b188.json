{"ast":null,"code":"import _slicedToArray from \"C:\\\\Coding\\\\react-blog-github\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Coding\\\\react-blog-github\\\\src\\\\Application.js\";\nimport React from 'react';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { Helmet } from \"react-helmet\";\nimport { ThemeProvider } from \"styled-components\";\nimport { config } from './config';\nimport { client } from './Utils/apollo';\nimport Router from './Router';\nimport GithubCallback from './Containers/GithubCallback';\nimport Toggle from \"./Components/Theme/Toggler\";\nimport { GlobalStyles } from \"./Components/Theme/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"./Components/Theme/Theme\";\nimport { useDarkMode } from \"./Components/Theme/useDarkMode\";\n\nconst Application = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  const _useDarkMode = useDarkMode(),\n        _useDarkMode2 = _slicedToArray(_useDarkMode, 2),\n        theme = _useDarkMode2[0],\n        themeToggler = _useDarkMode2[1];\n\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  if (urlParams.get('code')) {\n    return React.createElement(GithubCallback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Helmet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, config.title), React.createElement(\"meta\", {\n    charSet: \"utf-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"meta\", {\n    name: \"description\",\n    content: config.subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"meta\", {\n    name: \"theme-color\",\n    content: config.header.backgroundColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ThemeProvider, {\n    theme: themeMode,\n    toggleTheme: themeToggler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(GlobalStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Toggle, {\n    theme: theme,\n    toggleTheme: themeToggler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))));\n};\n\nexport default Application;","map":{"version":3,"sources":["C:/Coding/react-blog-github/src/Application.js"],"names":["React","ApolloProvider","Helmet","ThemeProvider","config","client","Router","GithubCallback","Toggle","GlobalStyles","lightTheme","darkTheme","useDarkMode","Application","urlParams","URLSearchParams","window","location","search","theme","themeToggler","themeMode","get","title","subtitle","header","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,YAAT,QAA6B,iCAA7B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,0BAAtC;AACA,SAAUC,WAAV,QAA6B,gCAA7B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;;AADwB,uBAEMN,WAAW,EAFjB;AAAA;AAAA,QAEjBO,KAFiB;AAAA,QAEVC,YAFU;;AAGxB,QAAMC,SAAS,GAAGF,KAAK,KAAK,OAAV,GAAoBT,UAApB,GAAiCC,SAAnD;;AAEA,MAAIG,SAAS,CAACQ,GAAV,CAAc,MAAd,CAAJ,EAA2B;AACzB,WAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,0CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQlB,MAAM,CAACmB,KAAf,CADJ,EAEI;AAAM,IAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAEnB,MAAM,CAACoB,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAEpB,MAAM,CAACqB,MAAP,CAAcC,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF,EAOE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAErB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEgB,SAAtB;AAAiC,IAAA,WAAW,EAAED,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAED,KAAf;AAAsB,IAAA,WAAW,EAAEC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CAPF,CADF;AAiBD,CA1BD;;AA4BA,eAAeP,WAAf","sourcesContent":["import React from 'react'\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { Helmet } from \"react-helmet\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport { config } from './config'\nimport { client } from './Utils/apollo';\nimport Router from './Router';\nimport GithubCallback from './Containers/GithubCallback';\nimport Toggle from \"./Components/Theme/Toggler\";\nimport { GlobalStyles } from \"./Components/Theme/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"./Components/Theme/Theme\";\nimport  { useDarkMode } from \"./Components/Theme/useDarkMode\";\n\nconst Application = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const [theme, themeToggler] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  if (urlParams.get('code')) {\n    return <GithubCallback />\n  }\n\n  return (\n    <>\n      <Helmet>\n          <title>{config.title}</title>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"description\" content={config.subtitle} />\n          <meta name=\"theme-color\" content={config.header.backgroundColor} />\n      </Helmet>\n      <ApolloProvider client={client}>\n        <ThemeProvider theme={themeMode} toggleTheme={themeToggler}>\n          <GlobalStyles />\n          <Router />\n          <Toggle theme={theme} toggleTheme={themeToggler} />\n        </ThemeProvider>\n      </ApolloProvider>\n    </>\n  )\n};\n\nexport default Application;"]},"metadata":{},"sourceType":"module"}