{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\react-blog-github\\\\react-blog-github\\\\src\\\\Application.js\";\nimport React from \"react\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { Helmet } from \"react-helmet\";\nimport { ThemeProvider } from \"styled-components\";\nimport { config } from \"./config\";\nimport { client } from \"./Utils/apollo\";\nimport Router from \"./Router\";\nimport GithubCallback from \"./Containers/GithubCallback\";\nimport Toggle from \"./Components/Theme/Toggler\";\nimport { GlobalStyles } from \"./Components/Theme/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"./Components/Theme/Theme\";\nimport { useDarkMode } from \"./Components/Theme/useDarkMode\";\n\nconst Application = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const [theme, themeToggler] = useDarkMode();\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n  if (urlParams.get(\"code\")) {\n    return /*#__PURE__*/React.createElement(GithubCallback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, config.title), /*#__PURE__*/React.createElement(\"meta\", {\n    charSet: \"utf-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"description\",\n    content: config.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"contact\",\n    content: config.contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"theme-color\",\n    content: config.header.backgroundColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: themeMode,\n    toggleTheme: themeToggler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Toggle, {\n    theme: theme,\n    toggleTheme: themeToggler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Application;","map":{"version":3,"sources":["C:/Coding/react-blog-github/react-blog-github/src/Application.js"],"names":["React","ApolloProvider","Helmet","ThemeProvider","config","client","Router","GithubCallback","Toggle","GlobalStyles","lightTheme","darkTheme","useDarkMode","Application","urlParams","URLSearchParams","window","location","search","theme","themeToggler","themeMode","get","title","subtitle","contact","header","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,YAAT,QAA6B,iCAA7B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,0BAAtC;AACA,SAASC,WAAT,QAA4B,gCAA5B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AACA,QAAM,CAACC,KAAD,EAAQC,YAAR,IAAwBR,WAAW,EAAzC;AACA,QAAMS,SAAS,GAAGF,KAAK,KAAK,OAAV,GAAoBT,UAApB,GAAiCC,SAAnD;;AAEA,MAAIG,SAAS,CAACQ,GAAV,CAAc,MAAd,CAAJ,EAA2B;AACzB,wBAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQlB,MAAM,CAACmB,KAAf,CADF,eAEE;AAAM,IAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAEnB,MAAM,CAACoB,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,OAAO,EAAEpB,MAAM,CAACqB,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAErB,MAAM,CAACsB,MAAP,CAAcC,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,eAQE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEtB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEgB,SAAtB;AAAiC,IAAA,WAAW,EAAED,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAED,KAAf;AAAsB,IAAA,WAAW,EAAEC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CARF,CADF;AAkBD,CA3BD;;AA6BA,eAAeP,WAAf","sourcesContent":["import React from \"react\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nimport { config } from \"./config\";\r\nimport { client } from \"./Utils/apollo\";\r\nimport Router from \"./Router\";\r\nimport GithubCallback from \"./Containers/GithubCallback\";\r\nimport Toggle from \"./Components/Theme/Toggler\";\r\nimport { GlobalStyles } from \"./Components/Theme/GlobalStyles\";\r\nimport { lightTheme, darkTheme } from \"./Components/Theme/Theme\";\r\nimport { useDarkMode } from \"./Components/Theme/useDarkMode\";\r\n\r\nconst Application = () => {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const [theme, themeToggler] = useDarkMode();\r\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\r\n\r\n  if (urlParams.get(\"code\")) {\r\n    return <GithubCallback />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{config.title}</title>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"description\" content={config.subtitle} />\r\n        <meta name=\"contact\" content={config.contact} />\r\n        <meta name=\"theme-color\" content={config.header.backgroundColor} />\r\n      </Helmet>\r\n      <ApolloProvider client={client}>\r\n        <ThemeProvider theme={themeMode} toggleTheme={themeToggler}>\r\n          <GlobalStyles />\r\n          <Router />\r\n          <Toggle theme={theme} toggleTheme={themeToggler} />\r\n        </ThemeProvider>\r\n      </ApolloProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Application;\r\n"]},"metadata":{},"sourceType":"module"}