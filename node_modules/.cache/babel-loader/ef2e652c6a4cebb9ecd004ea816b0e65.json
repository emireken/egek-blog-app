{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\react-blog-github\\\\react-blog-github\\\\src\\\\Containers\\\\Blog.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { config } from \"../config\";\nimport { Header } from \"../Components/Header\";\nimport { Loader } from '../Components/Common';\nimport { BlogContainer } from '../Components/Blog';\nimport { Card } from '../Components/Blog/Card';\nconst GET_POSTS = gql`\n{\n  repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n    issues(first: 100, states: OPEN, filterBy: { labels: \"blog\" }, orderBy: { direction: DESC, field: CREATED_AT }) {\n      nodes {\n        title\n        body\n        bodyHTML\n        bodyText\n        number\n        labels(first: 100) {\n          nodes {\n            color\n            name\n            id\n          }\n        }\n        author {\n          url\n          avatarUrl\n          login\n        }\n        updatedAt\n        id\n      }\n    }\n  }\n}\n`;\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_POSTS);\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        console.error(error);\n      }\n\n      if (data) {\n        var _data$repository, _data$repository$issu;\n\n        setPosts(data === null || data === void 0 ? void 0 : (_data$repository = data.repository) === null || _data$repository === void 0 ? void 0 : (_data$repository$issu = _data$repository.issues) === null || _data$repository$issu === void 0 ? void 0 : _data$repository$issu.nodes);\n      }\n    }\n  }, [loading, error, data]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BlogContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }) : posts.map((v, i) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      blog: v,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 22\n      }\n    });\n  })));\n};\n\nexport default Blog;","map":{"version":3,"sources":["C:/Coding/react-blog-github/react-blog-github/src/Containers/Blog.js"],"names":["React","useState","useEffect","gql","useQuery","config","Header","Loader","BlogContainer","Card","GET_POSTS","githubUserName","githubRepo","Blog","posts","setPosts","loading","error","data","console","repository","issues","nodes","map","v","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,IAAT,QAAqB,yBAArB;AAEA,MAAMC,SAAS,GAAGP,GAAI;AACtB;AACA,uBAAuBE,MAAM,CAACM,cAAe,aAAYN,MAAM,CAACO,UAAW;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5BA;;AA8BA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEe,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bd,QAAQ,CAACM,SAAD,CAAzC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACc,OAAL,EAAc;AACZ,UAAIC,KAAJ,EAAW;AACTE,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD;;AAED,UAAIC,IAAJ,EAAU;AAAA;;AACRH,QAAAA,QAAQ,CAACG,IAAD,aAACA,IAAD,2CAACA,IAAI,CAAEE,UAAP,8EAAC,iBAAkBC,MAAnB,0DAAC,sBAA0BC,KAA3B,CAAR;AACD;AACF;AACF,GAVQ,EAUN,CAACN,OAAD,EAAUC,KAAV,EAAiBC,IAAjB,CAVM,CAAT;AAYA,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,OAAO,gBACL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAELF,KAAK,CAACS,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClB,wBAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAED,CAAZ;AAAe,MAAA,GAAG,EAAEC,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CAJN,CAFF,CADF;AAcD,CA9BD;;AAgCA,eAAeZ,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { config } from \"../config\";\nimport { Header } from \"../Components/Header\";\nimport { Loader } from '../Components/Common'\nimport { BlogContainer } from '../Components/Blog'\nimport { Card } from '../Components/Blog/Card'\n\nconst GET_POSTS = gql`\n{\n  repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n    issues(first: 100, states: OPEN, filterBy: { labels: \"blog\" }, orderBy: { direction: DESC, field: CREATED_AT }) {\n      nodes {\n        title\n        body\n        bodyHTML\n        bodyText\n        number\n        labels(first: 100) {\n          nodes {\n            color\n            name\n            id\n          }\n        }\n        author {\n          url\n          avatarUrl\n          login\n        }\n        updatedAt\n        id\n      }\n    }\n  }\n}\n`\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        console.error(error)\n      }\n\n      if (data) {\n        setPosts(data?.repository?.issues?.nodes)\n      }\n    }\n  }, [loading, error, data]);\n\n  return (\n    <>\n      <Header />\n      <BlogContainer>\n        {\n          loading\n          ? <Loader />\n          : posts.map((v, i) => {\n              return <Card blog={v} key={i} />;\n            })\n        }\n      </BlogContainer>\n    </>\n  );\n}\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}