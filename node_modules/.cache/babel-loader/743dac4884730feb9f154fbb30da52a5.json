{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Coding\\\\react-blog-github\\\\react-blog-github\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Coding\\\\react-blog-github\\\\react-blog-github\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";export var getToken=function getToken(){return localStorage.getItem('githubToken');};export var getAuthenticatedUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var token,response,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=localStorage.getItem('githubToken');if(!token){_context.next=10;break;}_context.next=4;return fetch('https://api.github.com/user',{headers:new Headers({authorization:\"Bearer \".concat(token)})});case 4:response=_context.sent;_context.next=7;return response.json();case 7:result=_context.sent;result.token=token;return _context.abrupt(\"return\",result);case 10:case\"end\":return _context.stop();}}},_callee);}));return function getAuthenticatedUser(){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/Coding/react-blog-github/react-blog-github/src/Utils/auth.js"],"names":["getToken","localStorage","getItem","getAuthenticatedUser","token","fetch","headers","Headers","authorization","response","json","result"],"mappings":"qVAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAC5B,MAAOC,CAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAP,CACD,CAFM,CAIP,MAAO,IAAMC,CAAAA,oBAAoB,0FAAG,6JAC5BC,KAD4B,CACpBH,YAAY,CAACC,OAAb,CAAqB,aAArB,CADoB,KAE9BE,KAF8B,gDAGTC,CAAAA,KAAK,CAAC,6BAAD,CAAgC,CAC1DC,OAAO,CAAE,GAAIC,CAAAA,OAAJ,CAAY,CACnBC,aAAa,kBAAYJ,KAAZ,CADM,CAAZ,CADiD,CAAhC,CAHI,QAG1BK,QAH0B,qCAQXA,CAAAA,QAAQ,CAACC,IAAT,EARW,QAQ1BC,MAR0B,eAShCA,MAAM,CAACP,KAAP,CAAeA,KAAf,CATgC,gCAUzBO,MAVyB,yDAAH,kBAApBR,CAAAA,oBAAoB,0CAA1B","sourcesContent":["export const getToken = () => {\n  return localStorage.getItem('githubToken');\n}\n\nexport const getAuthenticatedUser = async () => {\n  const token = localStorage.getItem('githubToken');\n  if (token) {\n    const response = await fetch('https://api.github.com/user', {\n      headers: new Headers({\n        authorization: `Bearer ${token}`\n      }),\n    });\n    const result = await response.json();\n    result.token = token;\n    return result;\n  }\n}"]},"metadata":{},"sourceType":"module"}